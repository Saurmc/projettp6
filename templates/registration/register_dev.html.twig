{% extends 'base.html.twig' %}

{% block title %}Inscription Développeur - AdopteUnDev{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .competences-section {
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .competences-header {
            background-color: #4285f4;
            color: white;
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .competences-header h3 {
            margin: 0;
            font-size: 1.1rem;
        }

        .btn-ajouter-competence {
            background-color: #fff;
            color: #4285f4;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn-ajouter-competence:hover {
            background-color: #f8f9fa;
            transform: translateY(-1px);
        }

        .competence-row {
            padding: 1rem;
            display: flex;
            gap: 1rem;
            align-items: center;
            background-color: #f8f9fa;
            margin: 0.5rem;
            border-radius: 4px;
            border: 1px solid #e9ecef;
        }

        .competence-row .form-group {
            flex-grow: 1;
            margin: 0;
        }

        .btn-supprimer {
            background-color: #fff;
            color: #dc3545;
            border: 1px solid #dc3545;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-supprimer:hover {
            background-color: #dc3545;
            color: #fff;
        }

        .competences-error {
            margin: 0.5rem;
            border-radius: 4px;
        }

        .btn-submit {
            background-color: #4285f4;
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 4px;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            font-weight: 500;
            margin-top: 1rem;
        }

        .btn-submit:hover:not(:disabled) {
            background-color: #3367d6;
        }

        .btn-submit:disabled {
            background-color: #b3b3b3;
            cursor: not-allowed;
        }

        .form-select {
            padding: 0.5rem;
            border-radius: 4px;
            border: 1px solid #ced4da;
        }

        .form-select:focus {
            border-color: #4285f4;
            box-shadow: 0 0 0 0.2rem rgba(66, 133, 244, 0.25);
        }

        .required::after {
            content: " *";
            color: red;
        }
        .invalid-feedback {
            display: block;
        }

        .competences-container {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .competence-item {
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            padding: 1rem;
            position: relative;
        }

        .competence-label {
            display: block;
            padding-left: 0;
            margin-bottom: 0.5rem;
            font-weight: 500;
            cursor: pointer;
        }

        .progress {
            height: 4px;
            background-color: #f0f0f0;
            border-radius: 2px;
            overflow: hidden;
        }

        .progress-bar {
            transition: width 0.3s ease;
        }

        .competence-item:hover {
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .remove-competence {
            position: absolute;
            top: 1rem;
            right: 1rem;
            opacity: 0.5;
        }

        .remove-competence:hover {
            opacity: 1;
        }

        .competences-list {
            max-height: 400px;
            overflow-y: auto;
        }

        #competenceSearch {
            margin-bottom: 1rem;
        }

        .modal-body .competence-item {
            margin-bottom: 0.5rem;
            transition: background-color 0.2s;
        }

        .modal-body .competence-item:hover {
            background-color: #f8f9fa;
            cursor: pointer;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container py-5">
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}

        {% if not registrationForm.vars.valid %}
            <div class="alert alert-danger">
                {{ form_errors(registrationForm) }}
            </div>
        {% endif %}

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header py-3">
                        <h1 class="h3 mb-0">Inscription Développeur</h1>
                    </div>
                    <div class="card-body">
                        {{ form_start(registrationForm, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="alert alert-danger d-none" id="form-errors">
                                Veuillez corriger les erreurs suivantes :
                                <ul class="mb-0"></ul>
                            </div>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    {{ form_row(registrationForm.prenom, {
                                        'attr': {
                                            'class': 'form-control',
                                            'placeholder': 'Votre prénom'
                                        },
                                        'label_attr': {
                                            'class': 'required'
                                        }
                                    }) }}
                                </div>
                                <div class="col-md-6">
                                    {{ form_row(registrationForm.nom, {
                                        'attr': {
                                            'class': 'form-control',
                                            'placeholder': 'Votre nom'
                                        },
                                        'label_attr': {
                                            'class': 'required'
                                        }
                                    }) }}
                                </div>
                            </div>

                            <div class="mb-3">
                                {{ form_row(registrationForm.email, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'exemple@email.com'
                                    },
                                    'label_attr': {
                                        'class': 'required'
                                    }
                                }) }}
                            </div>

                            <div class="mb-3">
                                {{ form_row(registrationForm.plainPassword, {
                                    'attr': {
                                        'class': 'form-control',
                                        'minlength': '6',
                                        'id': 'password'
                                    },
                                    'label_attr': {
                                        'class': 'required'
                                    }
                                }) }}
                            </div>

                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label required">Confirmez le mot de passe</label>
                                <input type="password" 
                                       id="confirmPassword" 
                                       class="form-control" 
                                       required 
                                       minlength="6"
                                       oninput="validatePassword(this)">
                                <div class="invalid-feedback">
                                    Les mots de passe ne correspondent pas
                                </div>
                            </div>

                            <div class="row g-3">
                                <div class="col-md-6">
                                    {{ form_row(registrationForm.localisation, {
                                        'attr': {
                                            'class': 'form-control',
                                            'placeholder': 'Ville, Pays'
                                        },
                                        'label_attr': {
                                            'class': 'required'
                                        }
                                    }) }}
                                </div>
                                <div class="col-md-6">
                                    {{ form_row(registrationForm.niveauExperience, {
                                        'attr': {
                                            'class': 'form-select'
                                        },
                                        'label_attr': {
                                            'class': 'required'
                                        }
                                    }) }}
                                </div>
                            </div>

                            <div class="mb-3">
                                {{ form_row(registrationForm.salaireMinimum, {
                                    'label': 'Salaire minimum annuel (€)',
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Ex: 35000',
                                        'min': '0',
                                        'step': '1000'
                                    },
                                    'help': 'Indiquez votre salaire minimum annuel brut en euros',
                                    'label_attr': {
                                        'class': 'required'
                                    }
                                }) }}
                            </div>

                            <div class="mb-3">
                                {{ form_row(registrationForm.biographie, {
                                    'attr': {
                                        'class': 'form-control',
                                        'rows': 5,
                                        'placeholder': 'Parlez-nous de vous, de votre parcours et de vos expériences...'
                                    },
                                    'label_attr': {
                                        'class': 'required'
                                    }
                                }) }}
                            </div>

                            <div class="mb-3">
                                {{ form_row(registrationForm.avatar, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'https://exemple.com/votre-avatar.jpg'
                                    }
                                }) }}
                            </div>

                            <div class="mb-4">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h5 class="mb-0">Compétences</h5>
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCompetenceModal">
                                        <i class="fas fa-plus"></i> Ajouter une compétence
                                    </button>
                                </div>
                                <div id="competences-wrapper">
                                    {{ form_widget(registrationForm.competences, {'attr': {'class': 'd-none'}}) }}
                                    <div class="competences-container" id="selectedCompetences">
                                        {% for competence in registrationForm.competences %}
                                            {% if competence.vars.checked %}
                                                <div class="competence-item" data-competence-id="{{ competence.vars.id }}">
                                                    <span class="competence-label">{{ competence.vars.label }}</span>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-success" role="progressbar" style="width: 100%"></div>
                                                    </div>
                                                    <button type="button" class="btn-close remove-competence" aria-label="Supprimer"></button>
                                                </div>
                                            {% endif %}
                                        {% endfor %}
                                    </div>
                                </div>
                                {{ form_errors(registrationForm.competences) }}
                            </div>

                            <!-- Modal -->
                            <div class="modal fade" id="addCompetenceModal" tabindex="-1" aria-labelledby="addCompetenceModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="addCompetenceModalLabel">Ajouter une compétence</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="mb-3">
                                                <input type="text" class="form-control" id="competenceSearch" placeholder="Rechercher une compétence...">
                                            </div>
                                            <div class="competences-list">
                                                {% for competence in registrationForm.competences %}
                                                    {% if not competence.vars.checked %}
                                                        <div class="competence-item" data-competence-id="{{ competence.vars.id }}">
                                                            <span class="competence-label">{{ competence.vars.label }}</span>
                                                            <div class="progress">
                                                                <div class="progress-bar bg-success" role="progressbar" style="width: 0%"></div>
                                                            </div>
                                                        </div>
                                                    {% endif %}
                                                {% endfor %}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="btn-submit">
                                <i class="fas fa-user-plus"></i>
                                S'inscrire
                            </button>
                        {{ form_end(registrationForm) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const competencesWrapper = document.getElementById('competences-wrapper');
            const selectedCompetences = document.getElementById('selectedCompetences');
            const competencesList = document.querySelector('.competences-list');
            const searchInput = document.getElementById('competenceSearch');
            const checkboxes = competencesWrapper.querySelectorAll('input[type="checkbox"]');

            // Fonction de recherche
            searchInput.addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();
                const competences = competencesList.querySelectorAll('.competence-item');
                
                competences.forEach(competence => {
                    const label = competence.querySelector('.competence-label').textContent.toLowerCase();
                    if (label.includes(searchTerm)) {
                        competence.style.display = '';
                    } else {
                        competence.style.display = 'none';
                    }
                });
            });

            // Ajout d'une compétence
            competencesList.addEventListener('click', function(e) {
                const competenceItem = e.target.closest('.competence-item');
                if (!competenceItem) return;

                const competenceId = competenceItem.dataset.competenceId;
                const checkbox = competencesWrapper.querySelector(`input[id="${competenceId}"]`);
                const clone = competenceItem.cloneNode(true);
                
                // Ajouter le bouton de suppression
                const removeButton = document.createElement('button');
                removeButton.className = 'btn-close remove-competence';
                removeButton.setAttribute('aria-label', 'Supprimer');
                clone.appendChild(removeButton);

                selectedCompetences.appendChild(clone);
                checkbox.checked = true;
                competenceItem.remove();

                // Fermer le modal
                const modal = document.getElementById('addCompetenceModal');
                const modalInstance = bootstrap.Modal.getInstance(modal);
                modalInstance.hide();
            });

            // Suppression d'une compétence
            selectedCompetences.addEventListener('click', function(e) {
                if (e.target.classList.contains('remove-competence')) {
                    const competenceItem = e.target.closest('.competence-item');
                    const competenceId = competenceItem.dataset.competenceId;
                    const checkbox = competencesWrapper.querySelector(`input[id="${competenceId}"]`);
                    const clone = competenceItem.cloneNode(true);
                    
                    // Supprimer le bouton de suppression
                    clone.querySelector('.remove-competence').remove();
                    
                    competencesList.appendChild(clone);
                    checkbox.checked = false;
                    competenceItem.remove();
                }
            });
        });

        function validatePassword(input) {
            const password = document.getElementById('password');
            if (input.value !== password.value) {
                input.setCustomValidity('Les mots de passe ne correspondent pas');
            } else {
                input.setCustomValidity('');
            }
        }
    </script>
{% endblock %}
