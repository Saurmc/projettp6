{% extends 'base.html.twig' %}

{% block title %}Nouvelle offre d'emploi{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .competences-section {
            margin-top: 30px;
        }
        .competence-row {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        .competence-select {
            flex: 1;
        }
        .btn-supprimer {
            white-space: nowrap;
        }
        .progress {
            height: 4px;
            margin-top: 5px;
            background-color: #eee;
        }
        .progress-bar {
            background-color: #28a745;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const competencesList = document.querySelector('.competences-list');
            const btnAjouter = document.querySelector('.btn-ajouter-competence');
            const hiddenSelect = document.querySelector('#fiche_de_poste_competences');
            const form = document.querySelector('form');
            let competenceCounter = 0;

            function addCompetenceRow() {
                const row = document.createElement('div');
                row.className = 'competence-row';
                row.innerHTML = `
                    <div class="form-group flex-grow-1">
                        <label>Compétences</label>
                        <select class="form-select competence-select" required>
                            <option value="">Choisir une compétence</option>
                            {% for competence in form.competences.vars.choices %}
                                <option value="{{ competence.value }}">{{ competence.label }}</option>
                            {% endfor %}
                        </select>
                        <div class="invalid-feedback">
                            Veuillez sélectionner une compétence
                        </div>
                        <div class="progress">
                            <div class="progress-bar" style="width: 100%"></div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-danger btn-supprimer">
                        Supprimer
                    </button>
                `;
                
                competencesList.appendChild(row);

                const select = row.querySelector('.competence-select');
                select.addEventListener('change', updateHiddenSelect);

                const btnSupprimer = row.querySelector('.btn-supprimer');
                btnSupprimer.addEventListener('click', () => {
                    row.remove();
                    updateHiddenSelect();
                    validateForm();
                });
            }

            function updateHiddenSelect() {
                Array.from(hiddenSelect.options).forEach(option => {
                    option.selected = false;
                });

                document.querySelectorAll('.competence-select').forEach(select => {
                    if (select.value) {
                        const option = hiddenSelect.querySelector(`option[value="${select.value}"]`);
                        if (option) {
                            option.selected = true;
                        }
                    }
                });
                validateForm();
            }

            function validateForm() {
                const isValid = form.checkValidity();
                const hasCompetences = document.querySelectorAll('.competence-select').length > 0 &&
                                     Array.from(document.querySelectorAll('.competence-select')).every(select => select.value);
                
                const submitBtn = form.querySelector('button[type="submit"]');
                submitBtn.disabled = !isValid || !hasCompetences;

                if (!hasCompetences) {
                    // Afficher un message d'erreur si aucune compétence n'est sélectionnée
                    let errorDiv = document.querySelector('.competences-error');
                    if (!errorDiv) {
                        errorDiv = document.createElement('div');
                        errorDiv.className = 'alert alert-danger mt-2 competences-error';
                        competencesList.parentNode.insertBefore(errorDiv, competencesList);
                    }
                    errorDiv.textContent = 'Veuillez ajouter au moins une compétence';
                } else {
                    // Supprimer le message d'erreur si des compétences sont sélectionnées
                    const errorDiv = document.querySelector('.competences-error');
                    if (errorDiv) {
                        errorDiv.remove();
                    }
                }
            }

            form.addEventListener('submit', function(e) {
                if (!form.checkValidity() || document.querySelectorAll('.competence-select').length === 0) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
                validateForm();
            });

            btnAjouter.addEventListener('click', addCompetenceRow);

            // Validation initiale
            validateForm();
        });
    </script>
{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                {% for label, messages in app.flashes %}
                    {% for message in messages %}
                        <div class="alert alert-{{ label == 'error' ? 'danger' : label }} alert-dismissible fade show" role="alert">
                            {{ message }}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    {% endfor %}
                {% endfor %}

                <div class="card shadow">
                    <div class="card-body">
                        <h2 class="card-title mb-4">Créer une nouvelle offre d'emploi</h2>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="mb-3">
                                {{ form_row(form.titre, {
                                    'attr': {'class': 'form-control'}
                                }) }}
                            </div>

                            <div class="mb-3">
                                {{ form_row(form.description, {
                                    'attr': {'class': 'form-control'}
                                }) }}
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    {{ form_row(form.localisation, {
                                        'attr': {'class': 'form-control'}
                                    }) }}
                                </div>

                                <div class="col-md-6 mb-3">
                                    {{ form_row(form.salaire, {
                                        'attr': {'class': 'form-control'}
                                    }) }}
                                </div>
                            </div>

                            <div class="mb-3">
                                {{ form_row(form.niveauExperience, {
                                    'attr': {'class': 'form-control'}
                                }) }}
                            </div>

                            <div class="competences-section">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h3>Compétences</h3>
                                    <button type="button" class="btn btn-primary btn-ajouter-competence">
                                        <i class="fas fa-plus"></i> Ajouter une compétence
                                    </button>
                                </div>

                                {{ form_widget(form.competences, {
                                    'attr': {
                                        'class': 'form-select',
                                        'style': 'display: none;'
                                    }
                                }) }}

                                <div class="competences-list">
                                    <!-- Les compétences seront ajoutées ici dynamiquement -->
                                </div>
                            </div>

                            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                                <a href="{{ path('entreprise_dashboard') }}" class="btn btn-secondary me-2">
                                    <i class="fas fa-times me-1"></i>Annuler
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i>Créer l'offre
                                </button>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}